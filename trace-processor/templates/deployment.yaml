apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.traceProcessor.name }}
  labels:
    {{- include "traceProcessor.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.traceProcessor.replicas }}
  selector:
    matchLabels:
      {{- include "traceProcessor.selector" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        {{- include "traceProcessor.selector" . | nindent 8 }}
    spec:
      {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecret }}
      {{- end }}
      serviceAccountName: {{ .Values.traceProcessor.serviceAccount.name }}
      containers:
        - name: {{ .Values.traceProcessor.name }}
          image: "{{ .Values.traceProcessor.image.repository }}:{{ .Values.traceProcessor.image.tag }}"
          imagePullPolicy: {{ .Values.traceProcessor.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.traceProcessor.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.traceProcessor.probes.liveness.path }}
              port: http
            initialDelaySeconds: {{ .Values.traceProcessor.probes.liveness.initialDelay }}
            periodSeconds: {{ .Values.traceProcessor.probes.liveness.period }}
          readinessProbe:
            httpGet:
              path: {{ .Values.traceProcessor.probes.readiness.path }}
              port: http
            initialDelaySeconds: {{ .Values.traceProcessor.probes.readiness.initialDelay }}
            periodSeconds: {{ .Values.traceProcessor.probes.readiness.period }}
          resources:
            requests:
              cpu: {{ .Values.traceProcessor.resources.requests.cpu }}
              memory: {{ .Values.traceProcessor.resources.requests.memory }}
            limits:
              cpu: {{ .Values.traceProcessor.resources.limits.cpu }}
              memory: {{ .Values.traceProcessor.resources.limits.memory }}
          env:
            - name: SERVER_PORT
              value: "{{ .Values.traceProcessor.containerPort }}"
            # Kafka Configuration
            - name: KAFKA_BROKERS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.traceProcessor.configMap.name }}
                  key: KAFKA_BROKERS
            - name: KAFKA_INPUT_TOPIC
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.traceProcessor.configMap.name }}
                  key: KAFKA_INPUT_TOPIC
            - name: KAFKA_OUTPUT_TOPIC
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.traceProcessor.configMap.name }}
                  key: KAFKA_OUTPUT_TOPIC
            - name: KAFKA_CONSUMER_GROUP
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.traceProcessor.configMap.name }}
                  key: KAFKA_CONSUMER_GROUP
            - name: KAFKA_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.traceProcessor.kafka.secretName }}
                  key: username
            - name: KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.traceProcessor.kafka.secretName }}
                  key: password
            # GCS Configuration
            - name: GCS_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.traceProcessor.configMap.name }}
                  key: GCS_BUCKET_NAME
            # Processing Configuration
            - name: MAX_CONCURRENT_JOBS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.traceProcessor.configMap.name }}
                  key: MAX_CONCURRENT_JOBS
            - name: PROCESSING_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.traceProcessor.configMap.name }}
                  key: PROCESSING_TIMEOUT
            - name: MAX_RETRIES
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.traceProcessor.configMap.name }}
                  key: MAX_RETRIES
            - name: RETRY_BACKOFF_MS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.traceProcessor.configMap.name }}
                  key: RETRY_BACKOFF_MS
            # Log Level
            - name: LOG_LEVEL
              value: "info"
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.traceProcessor.configMap.name }}